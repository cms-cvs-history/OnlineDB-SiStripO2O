process o2o = {

    service = MessageLogger {
	untracked vstring destinations = { "cout" }
	untracked PSet cout = { untracked string threshold = "INFO" }
	untracked vstring debugModules   = { "*" }
    }
    
    source = EmptyIOVSource {
	string timetype = "runnumber"
        untracked uint32 firstRun = insert_Run
	untracked uint32 lastRun = insert_Run
        uint32 interval = 1
    }
    untracked PSet maxEvents = {untracked int32 input = 1}
  

    service = SiStripConfigDb { 

	untracked    bool UsingDb         = true
	untracked  string ConfDb          = "cms_tracker_tif2/stabletif2@cms_tec_lyon"
	untracked  string Partition       = "insert_ConfigDbPartition"
	untracked uint32 MajorVersion = 0 //@@ cabling
	untracked uint32 MinorVersion = 0 //@@ cabling
	untracked uint32 FedMajorVersion = insert_fedmajor
	untracked uint32 FedMinorVersion = insert_fedminor
	untracked uint32 FecMajorVersion = 1
	untracked uint32 FecMinorVersion = 0
    }


    es_source FedCablingFromConfigDb = SiStripFedCablingBuilderFromDb {
	untracked string CablingSource = "UNDEFINED"
    }
    es_module sistripconn = SiStripConnectivity {}

    es_source PedFromConfigDb = SiStripPedestalsBuilderFromDb {}

    es_source NoiseFromConfigDb = SiStripNoiseBuilderFromDb {}

    
    service = PoolDBOutputService{
	string connect = "sqlite_file:dbfile.db"    
	#string connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"    
	string timetype = "runnumber"    
	untracked string BlobStreamerName="TBufferBlobStreamingService"
	PSet DBParameters = {
	    untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	    untracked uint32 messagelevel = 4 
	}
	 
	VPSet toPut={ 
	    { string record = "SiStripPedestalsRcd"  string tag = "SiStripPedestals_pass4_test_v1_p"} ,
	    { string record = "SiStripNoisesRcd"     string tag = "SiStripNoises_pass4_test_v1_n"} ,
	    { string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_pass4_test_v1"} 
	}
    }    
    
    
    module siStripO2O= newSiStripO2O {
	untracked bool   UsingDb    = true			 
    }	
    
   path p = { siStripO2O }
    
    module print = AsciiOutputModule {}
    endpath ep = { print }
}
