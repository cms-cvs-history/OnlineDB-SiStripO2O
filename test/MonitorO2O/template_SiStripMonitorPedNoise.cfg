process TEST = {
    
    
    service = MessageLogger
    {
	untracked vstring destinations =  {"cout"}
	untracked PSet cout   =  { untracked string threshold = "INFO" }
	untracked vstring debugModules =  { "Display" }                                       
    }
            
    es_source = PoolDBESSource { 
	VPSet toGet = {
	    { string record = "SiStripPedestalsRcd" string tag = "insert_tagP" }, { string record = "SiStripNoisesRcd" string tag = "insert_tagN" }
	    , { string record = "SiStripFedCablingRcd" string tag = "insert_tagCab" }
	}
	
	string connect = "insert_DBfile"
	string timetype = "runnumber" 
        untracked string BlobStreamerName="TBufferBlobStreamingService"
	PSet DBParameters = {
	    untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	    untracked int32 messageLevel=2
	}
    }
    
    # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
    es_module sistripconn = SiStripConnectivity {}
        
    source = EmptyIOVSource {
        string timetype = "runnumber"
	uint64 firstValue = insert_runNb 
        uint64 lastValue = insert_runNb
        uint64 interval = 1
    }
    untracked PSet maxEvents = {untracked int32 input = 1}

    
    module Display =  SiStripMonitorPedNoise {

	string fileName = "insert_output_filename"
	
	PSet TH1Noises = {
	    int32 Nbinx =  100	
	    double xmin =   0.
	    double xmax =  15.
	}	
    }
    
    module AsciiOutput = AsciiOutputModule {}
    
    path p = { Display }
    endpath e = { AsciiOutput } 
}

