process o2o = {

    service = MessageLogger {
	untracked vstring destinations = { "cout" }
#	untracked PSet cout = { untracked string threshold = "INFO" }
	untracked PSet cout = { untracked string threshold = "DEBUG" }
	untracked vstring debugModules   = { "*" }
    }
    
    source = EmptyIOVSource {
	string timetype = "runnumber"
        untracked uint32 firstRun = 1
	untracked uint32 lastRun = 1
        uint32 interval = 1
    }
    untracked PSet maxEvents = {untracked int32 input = 1}
  

    include "OnlineDB/SiStripConfigDb/data/SiStripConfigDb.cfi"
    replace SiStripConfigDb.UsingDb         = true
    replace SiStripConfigDb.ConfDb          = "insert_onlineDB"
    replace SiStripConfigDb.Partitions.PrimaryPartition.PartitionName = "insert_ConfigDbPartition"
    replace SiStripConfigDb.Partitions.PrimaryPartition.ForceVersions = true
    replace SiStripConfigDb.Partitions.PrimaryPartition.CablingVersion= {insert_cabmajor,insert_cabminor}		
    replace SiStripConfigDb.Partitions.PrimaryPartition.FedVersion = {insert_fedmajor,insert_fedminor}		
    replace SiStripConfigDb.Partitions.PrimaryPartition.FecVersion = {insert_fecmajor,insert_fecminor}	
    replace SiStripConfigDb.Partitions.PrimaryPartition.DcuDetIdsVersion = {insert_dcumajor,insert_dcuminor}
	                             
    replace SiStripConfigDb.TNS_ADMIN = "" 


    service = SiStripCondObjBuilderFromDb{}

    //PopCon config
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "insert_connect_string"
    replace CondDBCommon.DBParameters.messageLevel=4
    replace CondDBCommon.DBParameters.authenticationPath="insert_authPath"
    
    service = PoolDBOutputService{
	using CondDBCommon
	untracked string timetype = "runnumber"    
	untracked string BlobStreamerName="TBufferBlobStreamingService"
	VPSet toPut={ 
	    { string record = "SiStripPedestalsRcd"  string tag = "SiStripPedestals_insert_tag"} ,
	    { string record = "SiStripNoisesRcd"     string tag = "SiStripNoise_insert_tag"} ,
#	    { string record = "SiStripThresholdRcd"  string tag = "SiStripThreshold_insert_tag"} ,
	    { string record = "SiStripBadStrip"      string tag = "SiStripBadChannel_insert_tag"} ,
	    { string record = "SiStripFedCablingRcd" string tag = "SiStripFedCabling_insert_tag"} 
	}
	untracked string logconnect = "insert_logdb"		
    }    
    
    block CommonSiStripPopConParams = {
	untracked bool loggingOn = True
	bool SinceAppendMode = true
	PSet Source ={
	    untracked uint32 since = insert_Run
	    #untracked bool debug = true
	   untracked string name = "default"
	}
    }

    module siStripPopConNoise = SiStripPopConNoise {
	string record = "SiStripNoisesRcd"
	using CommonSiStripPopConParams
    }	
    replace siStripPopConNoise.Source.name="siStripPopConNoise"

    module siStripPopConPedestals = SiStripPopConPedestals {
	string record = "SiStripPedestalsRcd"
	using CommonSiStripPopConParams
    }
    replace siStripPopConPedestals.Source.name="siStripPopConPedestals"

    module siStripPopConFedCabling = SiStripPopConFedCabling {
	string record = "SiStripFedCablingRcd"
	using CommonSiStripPopConParams
    }
    replace siStripPopConFedCabling.Source.name="siStripPopConFedCabling"

    module siStripPopConBadStrip = SiStripPopConBadStrip {
	string record = "SiStripBadStrip"
	using CommonSiStripPopConParams
    }
    replace siStripPopConBadStrip.Source.name="siStripPopConBadStrip"

##############################
   es_source FedCablingFromConfigDb = SiStripFedCablingBuilderFromDb {
	untracked string CablingSource = "UNDEFINED"
    }
   es_module sistripconn = SiStripConnectivity {}

    es_source PedFromConfigDb = SiStripPedestalsBuilderFromDb {}

    es_source NoiseFromConfigDb = SiStripNoiseBuilderFromDb {}

   module testcabling   = test_AnalyzeCabling { }
   module testped       =  SiStripPedestalsReader {untracked uint32   printDebug = 1}
   module testnoise     =  SiStripNoisesReader    {untracked uint32   printDebug = 1}
   #module testthreshold  =  SiStripThresholdReader    {untracked uint32   printDebug = 1}
   #module testbadstrip  =  SiStripBadStripReader  {untracked uint32   printDebug = 1}

##################################################    

     path pcab = { siStripPopConFedCabling , testcabling}

#DOPEDESTAL    path pped = { siStripPopConNoise, siStripPopConPedestals  , siStripPopConBadStrip} #, testped, testnoise} #, siStripPopConBadStrip, testthreshold, testbadstrip}

#    path ptest={siStripO2O}
    
    module print = AsciiOutputModule {}
    endpath ep = { print }
}
